-- START OF TELEPORT & STICK GUI SCRIPT

local Players = game:GetService("Players")
local UserInputService = game:GetService("UserInputService")
local TweenService = game:GetService("TweenService")
local RunService = game:GetService("RunService")
local Player = Players.LocalPlayer

--[[
    SCRIPT LOGIC:
    - This script repurposes the Fling GUI for a "Teleport & Stick" function.
    - It uses a Heartbeat connection to continuously set the local player's CFrame
      to the target's CFrame, creating a "sticking" effect.
    - The effect can be stopped manually, or it will stop automatically if the
      local player or the target resets or leaves.
]]

-- Variables for Sticking Logic
local isSticking = false
local currentTarget = nil
local stickConnection = nil
local STICK_OFFSET = CFrame.new(0, 0, 2.5) -- Jarak di belakang target (agar tidak masuk ke dalam badannya)

-- Variables for SearchBox Debounce
local searchDebounceTime = 0.25
local searchDebounceThread = nil

-- Create GUI Elements
local ScreenGui = Instance.new("ScreenGui")
local MainFrame = Instance.new("Frame")
local UICorner = Instance.new("UICorner")
local Title = Instance.new("TextLabel")
local SearchBox = Instance.new("TextBox")
local PlayerList = Instance.new("ScrollingFrame")
local UIListLayout = Instance.new("UIListLayout")
local TeleportButton = Instance.new("TextButton") -- Renamed from FlingPlayerButton
local StopButton = Instance.new("TextButton")     -- Renamed from FlingAllPlayersButton
local StatusLabel = Instance.new("TextLabel")

-- GUI Setup (Visually the same, but with repurposed buttons)
ScreenGui.Name = "TeleportGUI"
ScreenGui.Parent = Player:WaitForChild("PlayerGui")
ScreenGui.ResetOnSpawn = false
ScreenGui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling

MainFrame.Name = "MainFrame"
MainFrame.Parent = ScreenGui
MainFrame.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
MainFrame.Position = UDim2.new(0.5, -175, 0.5, -175) -- Adjusted size for fewer buttons
MainFrame.Size = UDim2.new(0, 350, 0, 350)          -- Adjusted size
MainFrame.Active = true
MainFrame.Draggable = true
MainFrame.Visible = true

UICorner.Parent = MainFrame
UICorner.CornerRadius = UDim.new(0, 8)

Title.Name = "Title"
Title.Parent = MainFrame
Title.BackgroundTransparency = 1
Title.Position = UDim2.new(0, 0, 0.02, 0)
Title.Size = UDim2.new(1, 0, 0.1, 0)
Title.Font = Enum.Font.GothamBold
Title.Text = "Teleport & Stick GUI" -- New Title
Title.TextColor3 = Color3.fromRGB(255, 255, 255)
Title.TextSize = 22

SearchBox.Name = "SearchBox"
SearchBox.Parent = MainFrame
SearchBox.BackgroundColor3 = Color3.fromRGB(45, 45, 45)
SearchBox.Position = UDim2.new(0.05, 0, 0.15, 0)
SearchBox.Size = UDim2.new(0.9, 0, 0.1, 0)
SearchBox.Font = Enum.Font.Gotham
SearchBox.PlaceholderText = "Search player..."
SearchBox.Text = ""
SearchBox.TextColor3 = Color3.fromRGB(255, 255, 255)
SearchBox.TextSize = 14
local searchBoxCorner = Instance.new("UICorner")
searchBoxCorner.CornerRadius = UDim.new(0, 6)
searchBoxCorner.Parent = SearchBox

PlayerList.Name = "PlayerList"
PlayerList.Parent = MainFrame
PlayerList.BackgroundColor3 = Color3.fromRGB(45, 45, 45)
PlayerList.Position = UDim2.new(0.05, 0, 0.28, 0)
PlayerList.Size = UDim2.new(0.9, 0, 0.3, 0)
PlayerList.CanvasSize = UDim2.new(0, 0, 0, 0)
PlayerList.ScrollBarThickness = 4
PlayerList.ScrollingEnabled = true
local playerListCorner = Instance.new("UICorner")
playerListCorner.CornerRadius = UDim.new(0, 6)
playerListCorner.Parent = PlayerList
UIListLayout.Parent = PlayerList
UIListLayout.SortOrder = Enum.SortOrder.LayoutOrder
UIListLayout.Padding = UDim.new(0, 2)

-- Repurposed "Fling" button
TeleportButton.Name = "TeleportButton"
TeleportButton.Parent = MainFrame
TeleportButton.BackgroundColor3 = Color3.fromRGB(0, 120, 255)
TeleportButton.Position = UDim2.new(0.05, 0, 0.62, 0)
TeleportButton.Size = UDim2.new(0.9, 0, 0.12, 0)
TeleportButton.Font = Enum.Font.GothamBold
TeleportButton.Text = "TELEPORT & STICK" -- New Text
TeleportButton.TextColor3 = Color3.fromRGB(255, 255, 255)
TeleportButton.TextSize = 18
local teleportBtnCorner = Instance.new("UICorner")
teleportBtnCorner.CornerRadius = UDim.new(0, 6)
teleportBtnCorner.Parent = TeleportButton

-- Repurposed "Fling All" button
StopButton.Name = "StopButton"
StopButton.Parent = MainFrame
StopButton.BackgroundColor3 = Color3.fromRGB(200, 50, 50) -- Stop Color
StopButton.Position = UDim2.new(0.05, 0, 0.76, 0)
StopButton.Size = UDim2.new(0.9, 0, 0.12, 0)
StopButton.Font = Enum.Font.GothamBold
StopButton.Text = "STOP STICKING" -- New Text
StopButton.TextColor3 = Color3.fromRGB(255, 255, 255)
StopButton.TextSize = 18
local stopBtnCorner = Instance.new("UICorner")
stopBtnCorner.CornerRadius = UDim.new(0, 6)
stopBtnCorner.Parent = StopButton

StatusLabel.Name = "StatusLabel"
StatusLabel.Parent = MainFrame
StatusLabel.BackgroundTransparency = 1
StatusLabel.Position = UDim2.new(0.05, 0, 0.90, 0)
StatusLabel.Size = UDim2.new(0.9, 0, 0.1, 0)
StatusLabel.Font = Enum.Font.Gotham
StatusLabel.Text = ""
StatusLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
StatusLabel.TextSize = 12
StatusLabel.TextWrapped = true

-- Utility Functions
local function ShowStatus(message, color, duration)
    StatusLabel.Text = message
    StatusLabel.TextColor3 = color or Color3.fromRGB(255, 255, 255)
    task.delay(duration or 3, function()
        if StatusLabel.Text == message then
            StatusLabel.Text = ""
        end
    end)
end

local function GetPlayer(Name)
    Name = Name:lower()
    for _, playerObj in ipairs(Players:GetPlayers()) do
        if playerObj ~= Player and (playerObj.Name:lower():match("^" .. Name) or playerObj.DisplayName:lower():match("^" .. Name)) then
            return playerObj
        end
    end
    return nil
end

local function UpdatePlayerList(searchText)
    searchText = searchText or ""
    for _, child in ipairs(PlayerList:GetChildren()) do
        if child:IsA("TextButton") then child:Destroy() end
    end
    local playersToShow = {}
    for _, p in ipairs(Players:GetPlayers()) do
        if p ~= Player then
            if searchText == "" or p.Name:lower():match(searchText:lower()) or p.DisplayName:lower():match(searchText:lower()) then
                table.insert(playersToShow, p)
            end
        end
    end
    table.sort(playersToShow, function(a,b) return a.DisplayName:lower() < b.DisplayName:lower() end)
    for _, p in ipairs(playersToShow) do
        local playerButton = Instance.new("TextButton")
        playerButton.Size = UDim2.new(1, -8, 0, 25)
        playerButton.BackgroundColor3 = Color3.fromRGB(60, 60, 60)
        playerButton.Text = p.DisplayName .. " (@" .. p.Name .. ")"
        playerButton.TextColor3 = Color3.fromRGB(255, 255, 255)
        playerButton.TextSize = 14
        playerButton.Font = Enum.Font.Gotham
        playerButton.Parent = PlayerList
        local btnCorner = Instance.new("UICorner")
        btnCorner.CornerRadius = UDim.new(0, 4)
        btnCorner.Parent = playerButton
        playerButton.MouseButton1Click:Connect(function()
            SearchBox.Text = p.Name
        end)
    end
    PlayerList.CanvasSize = UDim2.new(0, 0, 0, UIListLayout.AbsoluteContentSize.Y)
end

-- Core Sticking Logic
local function stopSticking()
    if not isSticking then return end -- Do nothing if not sticking
    
    isSticking = false
    currentTarget = nil
    if stickConnection then
        stickConnection:Disconnect()
        stickConnection = nil
    end
    ShowStatus("Sticking stopped.", Color3.fromRGB(255, 150, 0))
end

local function startSticking(target)
    stopSticking() -- Stop any previous sticking first

    isSticking = true
    currentTarget = target
    
    ShowStatus("Sticking to " .. target.DisplayName .. "...", Color3.fromRGB(100, 255, 100), 5)

    stickConnection = RunService.Heartbeat:Connect(function()
        -- Conditions to automatically stop the loop
        if not isSticking or not currentTarget or not currentTarget.Parent then
            stopSticking()
            return
        end

        local localChar = Player.Character
        local targetChar = currentTarget.Character

        if not localChar or not targetChar then
            stopSticking()
            return
        end

        local localRoot = localChar:FindFirstChild("HumanoidRootPart")
        local targetRoot = targetChar:FindFirstChild("HumanoidRootPart")

        if not localRoot or not targetRoot then
            stopSticking()
            return
        end

        -- The main action: Set our CFrame to the target's CFrame
        localRoot.CFrame = targetRoot.CFrame * STICK_OFFSET
    end)
end

-- Event Connections
SearchBox:GetPropertyChangedSignal("Text"):Connect(function()
    if searchDebounceThread then task.cancel(searchDebounceThread) end
    searchDebounceThread = task.delay(searchDebounceTime, function()
        UpdatePlayerList(SearchBox.Text)
        searchDebounceThread = nil
    end)
end)

TeleportButton.MouseButton1Click:Connect(function()
    local targetName = SearchBox.Text
    if targetName == "" then
        ShowStatus("Enter a player name in the search box.", Color3.fromRGB(255, 150, 0))
        return
    end
    
    local targetPlayer = GetPlayer(targetName)
    if targetPlayer then
        startSticking(targetPlayer)
    else
        ShowStatus("Player '" .. targetName .. "' not found!", Color3.fromRGB(255, 50, 50))
    end
end)

StopButton.MouseButton1Click:Connect(function()
    stopSticking()
end)

-- Automatic stop on reset
Player.CharacterAdded:Connect(function(character)
    -- This ensures that if you reset, the sticking process is cleanly terminated.
    stopSticking()
end)

-- Initialize
UpdatePlayerList()
Players.PlayerAdded:Connect(function() task.delay(searchDebounceTime, function() UpdatePlayerList(SearchBox.Text) end) end)
Players.PlayerRemoving:Connect(function(player)
    if currentTarget == player then
        stopSticking() -- Stop if our target leaves
    end
    task.delay(searchDebounceTime, function() UpdatePlayerList(SearchBox.Text) end)
end)

-- Hover Effects
local function CreateHoverEffect(button)
    local originalColor = button.BackgroundColor3
    button.MouseEnter:Connect(function() TweenService:Create(button, TweenInfo.new(0.2), {BackgroundColor3 = originalColor:Lerp(Color3.new(1,1,1),0.2)}):Play() end)
    button.MouseLeave:Connect(function() TweenService:Create(button, TweenInfo.new(0.2), {BackgroundColor3 = originalColor}):Play() end)
end
CreateHoverEffect(TeleportButton)
CreateHoverEffect(StopButton)

print("Teleport & Stick GUI Loaded.")
ShowStatus("Teleport & Stick GUI Loaded and Visible.", Color3.fromRGB(150, 200, 255), 5)