Local Players = game:GetService("Players")
local UserInputService = game:GetService("UserInputService")
local TweenService = game:GetService("TweenService")
local RunService = game:GetService("RunService")
local Player = Players.LocalPlayer

-- Constants
local FLING_DURATION = 0.7
local MAX_VELOCITY = 9e9

-- Variables for Fling Aura
local isAuraActive = false
local auraRange = 20
local auraCheckInterval = 0.3
local auraFlingConnection = nil
local auraCheckTimer = 0

-- Variables for SearchBox Debounce
local searchDebounceTime = 0.25 -- Waktu tunggu (detik) sebelum update player list
local searchDebounceThread = nil

-- Create GUI Elements
local ScreenGui = Instance.new("ScreenGui")
local MainFrame = Instance.new("Frame")
local UICorner = Instance.new("UICorner")
local Title = Instance.new("TextLabel")
local SearchBox = Instance.new("TextBox")
local PlayerList = Instance.new("ScrollingFrame")
local UIListLayout = Instance.new("UIListLayout")
local FlingPlayerButton = Instance.new("TextButton")
local FlingAllPlayersButton = Instance.new("TextButton")
local AuraRangeLabel = Instance.new("TextLabel")
local AuraRangeInput = Instance.new("TextBox")
local AuraToggleButton = Instance.new("TextButton")
local StatusLabel = Instance.new("TextLabel")

-- GUI Setup
ScreenGui.Name = "FlingGUI"
ScreenGui.Parent = Player:WaitForChild("PlayerGui")
ScreenGui.ResetOnSpawn = false
ScreenGui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling
ScreenGui.Enabled = true -- Selalu enabled karena GUI selalu terlihat

MainFrame.Name = "MainFrame"
MainFrame.Parent = ScreenGui
MainFrame.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
MainFrame.Position = UDim2.new(0.5, -175, 0.5, -225)
MainFrame.Size = UDim2.new(0, 350, 0, 450)
MainFrame.Active = true
MainFrame.Draggable = true
MainFrame.Visible = true -- Selalu terlihat

UICorner.Parent = MainFrame
UICorner.CornerRadius = UDim.new(0, 8)

Title.Name = "Title"
Title.Parent = MainFrame
Title.BackgroundTransparency = 1
Title.Position = UDim2.new(0, 0, 0.02, 0)
Title.Size = UDim2.new(1, 0, 0.08, 0)
Title.Font = Enum.Font.GothamBold
Title.Text = "Fling GUI"
Title.TextColor3 = Color3.fromRGB(255, 255, 255)
Title.TextSize = 22

SearchBox.Name = "SearchBox"
SearchBox.Parent = MainFrame
SearchBox.BackgroundColor3 = Color3.fromRGB(45, 45, 45)
SearchBox.Position = UDim2.new(0.05, 0, 0.12, 0)
SearchBox.Size = UDim2.new(0.9, 0, 0.07, 0)
SearchBox.Font = Enum.Font.Gotham
SearchBox.PlaceholderText = "Search player..."
SearchBox.Text = ""
SearchBox.TextColor3 = Color3.fromRGB(255, 255, 255)
SearchBox.TextSize = 14
local searchBoxCorner = Instance.new("UICorner")
searchBoxCorner.CornerRadius = UDim.new(0, 6)
searchBoxCorner.Parent = SearchBox

PlayerList.Name = "PlayerList"
PlayerList.Parent = MainFrame
PlayerList.BackgroundColor3 = Color3.fromRGB(45, 45, 45)
PlayerList.Position = UDim2.new(0.05, 0, 0.20, 0)
PlayerList.Size = UDim2.new(0.9, 0, 0.25, 0)
PlayerList.CanvasSize = UDim2.new(0, 0, 0, 0)
PlayerList.ScrollBarThickness = 4
PlayerList.ScrollingEnabled = true
local playerListCorner = Instance.new("UICorner")
playerListCorner.CornerRadius = UDim.new(0, 6)
playerListCorner.Parent = PlayerList

UIListLayout.Parent = PlayerList
UIListLayout.SortOrder = Enum.SortOrder.LayoutOrder
UIListLayout.Padding = UDim.new(0, 2)

FlingPlayerButton.Name = "FlingPlayerButton"
FlingPlayerButton.Parent = MainFrame
FlingPlayerButton.BackgroundColor3 = Color3.fromRGB(0, 120, 255)
FlingPlayerButton.Position = UDim2.new(0.05, 0, 0.47, 0)
FlingPlayerButton.Size = UDim2.new(0.9, 0, 0.08, 0)
FlingPlayerButton.Font = Enum.Font.GothamBold
FlingPlayerButton.Text = "FLING PLAYER"
FlingPlayerButton.TextColor3 = Color3.fromRGB(255, 255, 255)
FlingPlayerButton.TextSize = 18
local flingPlayerBtnCorner = Instance.new("UICorner")
flingPlayerBtnCorner.CornerRadius = UDim.new(0, 6)
flingPlayerBtnCorner.Parent = FlingPlayerButton

FlingAllPlayersButton.Name = "FlingAllPlayersButton"
FlingAllPlayersButton.Parent = MainFrame
FlingAllPlayersButton.BackgroundColor3 = Color3.fromRGB(255, 50, 50)
FlingAllPlayersButton.Position = UDim2.new(0.05, 0, 0.57, 0)
FlingAllPlayersButton.Size = UDim2.new(0.9, 0, 0.08, 0)
FlingAllPlayersButton.Font = Enum.Font.GothamBold
FlingAllPlayersButton.Text = "FLING ALL PLAYERS"
FlingAllPlayersButton.TextColor3 = Color3.fromRGB(255, 255, 255)
FlingAllPlayersButton.TextSize = 18
local flingAllBtnCorner = Instance.new("UICorner")
flingAllBtnCorner.CornerRadius = UDim.new(0, 6)
flingAllBtnCorner.Parent = FlingAllPlayersButton

AuraRangeLabel.Name = "AuraRangeLabel"
AuraRangeLabel.Parent = MainFrame
AuraRangeLabel.BackgroundTransparency = 1
AuraRangeLabel.Position = UDim2.new(0.05, 0, 0.67, 0)
AuraRangeLabel.Size = UDim2.new(0.4, 0, 0.05, 0)
AuraRangeLabel.Font = Enum.Font.Gotham
AuraRangeLabel.Text = "Aura Range (studs):"
AuraRangeLabel.TextColor3 = Color3.fromRGB(200, 200, 200)
AuraRangeLabel.TextSize = 14
AuraRangeLabel.TextXAlignment = Enum.TextXAlignment.Left

AuraRangeInput.Name = "AuraRangeInput"
AuraRangeInput.Parent = MainFrame
AuraRangeInput.BackgroundColor3 = Color3.fromRGB(45, 45, 45)
AuraRangeInput.Position = UDim2.new(0.55, 0, 0.67, 0)
AuraRangeInput.Size = UDim2.new(0.4, 0, 0.05, 0)
AuraRangeInput.Font = Enum.Font.Gotham
AuraRangeInput.PlaceholderText = tostring(auraRange)
AuraRangeInput.Text = tostring(auraRange)
AuraRangeInput.TextColor3 = Color3.fromRGB(255, 255, 255)
AuraRangeInput.TextSize = 14
local auraInputCorner = Instance.new("UICorner")
auraInputCorner.CornerRadius = UDim.new(0, 6)
auraInputCorner.Parent = AuraRangeInput

AuraToggleButton.Name = "AuraToggleButton"
AuraToggleButton.Parent = MainFrame
AuraToggleButton.BackgroundColor3 = Color3.fromRGB(80, 80, 200)
AuraToggleButton.Position = UDim2.new(0.05, 0, 0.74, 0)
AuraToggleButton.Size = UDim2.new(0.9, 0, 0.08, 0)
AuraToggleButton.Font = Enum.Font.GothamBold
AuraToggleButton.Text = "AURA: OFF"
AuraToggleButton.TextColor3 = Color3.fromRGB(255, 255, 255)
AuraToggleButton.TextSize = 18
local auraToggleCorner = Instance.new("UICorner")
auraToggleCorner.CornerRadius = UDim.new(0, 6)
auraToggleCorner.Parent = AuraToggleButton

StatusLabel.Name = "StatusLabel"
StatusLabel.Parent = MainFrame
StatusLabel.BackgroundTransparency = 1
StatusLabel.Position = UDim2.new(0.05, 0, 0.85, 0)
StatusLabel.Size = UDim2.new(0.9, 0, 0.1, 0)
StatusLabel.Font = Enum.Font.Gotham
StatusLabel.Text = ""
StatusLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
StatusLabel.TextSize = 12
StatusLabel.TextWrapped = true

-- Utility Functions
local function ShowStatus(message, color, duration)
    StatusLabel.Text = message
    StatusLabel.TextColor3 = color or Color3.fromRGB(255, 255, 255)
    task.delay(duration or 3, function()
        if StatusLabel.Text == message then
            StatusLabel.Text = ""
        end
    end)
end

local function GetPlayer(Name)
    Name = Name:lower()
    for _, playerObj in ipairs(Players:GetPlayers()) do
        if playerObj ~= Player and (playerObj.Name:lower():match("^" .. Name) or playerObj.DisplayName:lower():match("^" .. Name)) then
            return playerObj
        end
    end
    return nil
end

local function UpdatePlayerList(searchText)
    searchText = searchText or ""
    -- Clear existing player buttons
    for _, child in ipairs(PlayerList:GetChildren()) do
        if child:IsA("TextButton") then
            child:Destroy()
        end
    end

    local playersToShow = {}
    for _, p in ipairs(Players:GetPlayers()) do
        if p ~= Player then -- Exclude local player
            if searchText == "" or p.Name:lower():match(searchText:lower()) or p.DisplayName:lower():match(searchText:lower()) then
                table.insert(playersToShow, p)
            end
        end
    end

    -- Sort players by display name
    table.sort(playersToShow, function(a,b)
        return a.DisplayName:lower() < b.DisplayName:lower()
    end)

    -- Create buttons for sorted players
    for _, p in ipairs(playersToShow) do
        local playerButton = Instance.new("TextButton")
        playerButton.Size = UDim2.new(1, -8, 0, 25) -- Slightly smaller to account for padding/scrollbar
        playerButton.BackgroundColor3 = Color3.fromRGB(60, 60, 60)
        playerButton.Text = p.DisplayName .. " (@" .. p.Name .. ")"
        playerButton.TextColor3 = Color3.fromRGB(255, 255, 255)
        playerButton.TextSize = 14
        playerButton.Font = Enum.Font.Gotham
        playerButton.Parent = PlayerList

        local btnCorner = Instance.new("UICorner")
        btnCorner.CornerRadius = UDim.new(0, 4)
        btnCorner.Parent = playerButton

        playerButton.MouseButton1Click:Connect(function()
            SearchBox.Text = p.Name -- Set SearchBox text to the actual username for GetPlayer
        end)
    end
    PlayerList.CanvasSize = UDim2.new(0, 0, 0, UIListLayout.AbsoluteContentSize.Y)
end

-- FlingPlayer Function (REVISED FOR ROBUSTNESS AND BETTER FEEDBACK)
local function FlingPlayer(targetPlayer, isFromAura)
    isFromAura = isFromAura or false
    local localPlayerCharacterAtStart = Player.Character
    local localHumanoidAtStart = localPlayerCharacterAtStart and localPlayerCharacterAtStart:FindFirstChildOfClass("Humanoid")
    local localRootPartAtStart = localHumanoidAtStart and localHumanoidAtStart.RootPart

    if not (localPlayerCharacterAtStart and localHumanoidAtStart and localRootPartAtStart and localHumanoidAtStart.Health > 0) then
        if not isFromAura then
            ShowStatus("Your character is missing, incomplete, or dead. Cannot initiate fling.", Color3.fromRGB(255, 50, 50), 3)
        end
        return false, "Local character missing/dead"
    end

    local targetCharacter = targetPlayer.Character
    local targetHumanoid = targetCharacter and targetCharacter:FindFirstChildOfClass("Humanoid")
    local targetRootPart = targetHumanoid and targetHumanoid.RootPart

    if not (targetCharacter and targetHumanoid and targetRootPart) then
        if not isFromAura then
            ShowStatus(targetPlayer.DisplayName .. "'s character is missing. Cannot fling.", Color3.fromRGB(255, 100, 0), 3)
        end
        return false, targetPlayer.DisplayName .. " character missing"
    end

    if targetHumanoid.Health <= 0 then
        if not isFromAura then
            ShowStatus(targetPlayer.DisplayName .. " is dead! Skipping.", Color3.fromRGB(255, 150, 50), 2)
        end
        return false, targetPlayer.DisplayName .. " is dead"
    end

    if targetHumanoid.Sit then
        if not isFromAura then
            ShowStatus(targetPlayer.DisplayName .. " is sitting! Skipping.", Color3.fromRGB(255, 150, 50), 2)
        end
        return false, targetPlayer.DisplayName .. " is sitting"
    end

    local originalLocalPos = localRootPartAtStart.CFrame
    local originalCameraSubject = workspace.CurrentCamera.CameraSubject
    local bodyVelocity
    local flingActuallyHappened = false
    local flingErrorMessage = "Unknown error during fling execution"

    local success, err = pcall(function()
        workspace.CurrentCamera.CameraSubject = targetRootPart
        bodyVelocity = Instance.new("BodyVelocity")
        bodyVelocity.Name = "FlingVelocity"
        bodyVelocity.Velocity = Vector3.new(MAX_VELOCITY, MAX_VELOCITY, MAX_VELOCITY)
        bodyVelocity.MaxForce = Vector3.new(math.huge, math.huge, math.huge)
        bodyVelocity.P = 1250 -- Default Power, can be tuned
        bodyVelocity.Parent = localRootPartAtStart

        localHumanoidAtStart:SetStateEnabled(Enum.HumanoidStateType.Seated, false)

        local startTime = tick()
        local angle = 0

        while tick() - startTime < FLING_DURATION do
            local currentLocalPlayerCharacter = Player.Character
            local currentLocalRootPart = currentLocalPlayerCharacter and currentLocalPlayerCharacter:FindFirstChild("HumanoidRootPart")
            if not (currentLocalRootPart and currentLocalRootPart == localRootPartAtStart and currentLocalRootPart.Parent) then
                error("Local player character changed/lost during fling operation.")
            end
            if not (Player.Character and Player.Character:FindFirstChildOfClass("Humanoid") and Player.Character:FindFirstChildOfClass("Humanoid").Health > 0) then
                error("Local player died during fling operation.")
            end

            if not (targetRootPart and targetRootPart.Parent and targetCharacter and targetCharacter.Parent == workspace and targetPlayer and targetPlayer.Parent) then
                error("Target character or player lost during fling operation.")
            end
            if not (targetHumanoid and targetHumanoid.Parent and targetHumanoid.Health > 0) then
                 error("Target died or humanoid lost during fling operation.")
            end

            angle = angle + 120
            for _, offset in ipairs({
                CFrame.new(0, 1.5, 0), CFrame.new(0, -1.5, 0),
                CFrame.new(2.25, 1.5, -2.25), CFrame.new(-2.25, -1.5, 2.25)
            }) do
                if not (targetRootPart and targetRootPart.Parent and currentLocalRootPart and currentLocalRootPart.Parent) then
                    break
                end
                currentLocalRootPart.CFrame = CFrame.new(targetRootPart.Position) * offset * CFrame.Angles(math.rad(angle),0,0)
                currentLocalRootPart.Velocity = Vector3.new(MAX_VELOCITY, MAX_VELOCITY, MAX_VELOCITY)
                currentLocalRootPart.RotVelocity = Vector3.new(MAX_VELOCITY, MAX_VELOCITY, MAX_VELOCITY)
                RunService.Heartbeat:Wait() -- Use Heartbeat for better physics sync
            end
        end
        flingActuallyHappened = true
    end)

    if bodyVelocity and bodyVelocity.Parent then
        bodyVelocity:Destroy()
    end

    local currentLocalPlayerCharacter = Player.Character
    local currentLocalHumanoid = currentLocalPlayerCharacter and currentLocalPlayerCharacter:FindFirstChildOfClass("Humanoid")
    local currentLocalRootPart = currentLocalHumanoid and currentLocalHumanoid.RootPart

    if currentLocalHumanoid then
        currentLocalHumanoid:SetStateEnabled(Enum.HumanoidStateType.Seated, true)
    elseif localHumanoidAtStart and localHumanoidAtStart.Parent then
        localHumanoidAtStart:SetStateEnabled(Enum.HumanoidStateType.Seated, true)
    end

    if currentLocalHumanoid then
        workspace.CurrentCamera.CameraSubject = currentLocalHumanoid
    else
        workspace.CurrentCamera.CameraSubject = originalCameraSubject
    end

    if currentLocalRootPart and currentLocalHumanoid and currentLocalHumanoid.Health > 0 then
        currentLocalRootPart.CFrame = originalLocalPos
        currentLocalHumanoid:ChangeState(Enum.HumanoidStateType.GettingUp)
        for _, part in ipairs(currentLocalPlayerCharacter:GetDescendants()) do
            if part:IsA("BasePart") then
                part.Velocity = Vector3.new(0,0,0)
                part.RotVelocity = Vector3.new(0,0,0)
            end
        end
        task.wait(0.05)
        local distToOriginal = (currentLocalRootPart.Position - originalLocalPos.Position).Magnitude

        if not isFromAura then
            if success and flingActuallyHappened then
                if distToOriginal < 15 then
                    ShowStatus("Fling completed on " .. targetPlayer.DisplayName .. "!", Color3.fromRGB(60, 255, 60), 2)
                else
                    ShowStatus("Fling on " .. targetPlayer.DisplayName .. " done, reset pos diff: " .. string.format("%.1f", distToOriginal) .. " studs.", Color3.fromRGB(255, 165, 0), 3)
                end
            elseif not success then
                flingErrorMessage = tostring(err)
                ShowStatus("Fling error for " .. targetPlayer.DisplayName .. ": " .. flingErrorMessage, Color3.fromRGB(255, 0, 0), 3.5)
            else
                flingErrorMessage = "Core fling logic did not complete successfully."
                ShowStatus("Fling attempt for " .. targetPlayer.DisplayName .. " finished, but core fling might not have run as expected.", Color3.fromRGB(255,100,0), 3)
            end
        end
        return success and flingActuallyHappened and distToOriginal < 15, flingErrorMessage
    else
        if not isFromAura then
            ShowStatus("Fling for " .. targetPlayer.DisplayName .. " attempted, but your character is missing or dead post-operation.", Color3.fromRGB(255, 0, 0), 3)
        end
        return false, "Local character missing/dead post-operation"
    end
end

-- Event Connections for SearchBox with Debounce
SearchBox:GetPropertyChangedSignal("Text"):Connect(function()
    if searchDebounceThread then
        task.cancel(searchDebounceThread)
        searchDebounceThread = nil
    end
    searchDebounceThread = task.delay(searchDebounceTime, function()
        if SearchBox then -- Pastikan SearchBox masih ada
            UpdatePlayerList(SearchBox.Text)
        end
        searchDebounceThread = nil
    end)
end)

FlingPlayerButton.MouseButton1Click:Connect(function()
    local targetName = SearchBox.Text
    if targetName == "" then
        ShowStatus("Enter a player name in search box.", Color3.fromRGB(255, 150, 0))
        return
    end
    local targetPlayer = GetPlayer(targetName)
    if targetPlayer then
        ShowStatus("Flinging " .. targetPlayer.DisplayName .. "...", Color3.fromRGB(255, 255, 100), 1.5)
        task.spawn(FlingPlayer, targetPlayer, false)
    else
        ShowStatus("Player '" .. targetName .. "' not found!", Color3.fromRGB(255, 50, 50))
    end
end)

-- REVISED FlingAllPlayersButton Logic
FlingAllPlayersButton.MouseButton1Click:Connect(function()
    local otherPlayersToFling = {}
    for _, p in ipairs(Players:GetPlayers()) do
        if p ~= Player and p.Character and p.Character:FindFirstChild("HumanoidRootPart") then -- Ensure character exists
            table.insert(otherPlayersToFling, p)
        end
    end

    if #otherPlayersToFling == 0 then
        ShowStatus("No other players (with characters) to fling.", Color3.fromRGB(255, 150, 0), 3)
        return
    end

    ShowStatus("Starting Fling All for " .. #otherPlayersToFling .. " players...", Color3.fromRGB(0, 150, 255), 3)

    task.spawn(function()
        local flingCount = 0
        local failedFlingDetails = {}
        local totalPlayers = #otherPlayersToFling

        for i, pTarget in ipairs(otherPlayersToFling) do
            -- Pengecekan #1: Validitas Pemain Lokal sebelum setiap fling
            local localChar = Player.Character
            local localRoot = localChar and localChar:FindFirstChild("HumanoidRootPart")
            local localHumanoid = localChar and localChar:FindFirstChildOfClass("Humanoid")

            if not (localChar and localRoot and localHumanoid and localHumanoid.Health > 0) then
                ShowStatus("LocalPlayer character lost or died. Aborting Fling All.", Color3.fromRGB(255, 50, 50), 4)
                break -- Hentikan seluruh operasi Fling All
            end

            -- Pengecekan #2: Validitas Pemain Target sebelum setiap fling
            if not (pTarget and pTarget.Parent and pTarget.Character and pTarget.Character:FindFirstChild("HumanoidRootPart") and pTarget.Character:FindFirstChildOfClass("Humanoid") and pTarget.Character:FindFirstChildOfClass("Humanoid").Health > 0) then
                local skipReason = "character missing, dead, or player left"
                if pTarget and pTarget.Character and pTarget.Character:FindFirstChildOfClass("Humanoid") and pTarget.Character:FindFirstChildOfClass("Humanoid").Health <= 0 then
                    skipReason = "is dead"
                elseif not (pTarget and pTarget.Parent) then
                    skipReason = "has left the game"
                end
                ShowStatus("Skipping " .. (pTarget and pTarget.Name or "Unknown Player") .. " (" .. skipReason .. ").", Color3.fromRGB(255,150,0), 2)
                table.insert(failedFlingDetails, {name = (pTarget and pTarget.Name or "Unknown Player"), reason = skipReason .. " pre-fling"
