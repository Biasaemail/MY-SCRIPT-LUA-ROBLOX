local TWEEN_DURATION = 0.3
local CHECKPOINT_DETECTION_RANGE = 100

local TweenService = game:GetService("TweenService")
local Players = game:GetService("Players")

local player = Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()
local humanoid = character:WaitForChild("Humanoid")
local humanoidRootPart = character:WaitForChild("HumanoidRootPart")

local checkpoints = {
    Vector3.new(-878, 14, -101),
    Vector3.new(-797, 181, 757),
    Vector3.new(-668, 334, 918),
    Vector3.new(-361, 334, 818),
    Vector3.new(132, 442, 606),
    Vector3.new(521, 442, 523),
    Vector3.new(465, 582, 349),
    Vector3.new(40, 854, 77),
    Vector3.new(-1, 880, -306),
    Vector3.new(51, 1142, -188)
}

local function moveOntoCheckpoint(targetPosition)
    local tweenInfo = TweenInfo.new(
        TWEEN_DURATION,
        Enum.EasingStyle.Quad,
        Enum.EasingDirection.Out
    )
    local tween = TweenService:Create(humanoidRootPart, tweenInfo, {CFrame = CFrame.new(targetPosition)})
    tween:Play()
    tween.Completed:Wait()
end

local function findStartingCheckpoint()
    local currentPos = humanoidRootPart.Position
    local lastPassedIndex = 0

    for i = #checkpoints, 1, -1 do
        local distance = (currentPos - checkpoints[i]).Magnitude
        if distance < CHECKPOINT_DETECTION_RANGE then
            lastPassedIndex = i
            break
        end
    end

    if lastPassedIndex == #checkpoints then
        return nil
    end
    
    return lastPassedIndex + 1
end

local startIndex = findStartingCheckpoint()

if not startIndex then
    print("finish lur.")
    return
end

print("Memulai dari Checkpoint " .. startIndex)

humanoid:SetStateEnabled(Enum.HumanoidStateType.Dead, false)

for i = startIndex, #checkpoints do
    local targetCheckpoint = checkpoints[i]
    print("Memproses Checkpoint " .. i .. ": " .. tostring(targetCheckpoint))

    local randomDirection = (math.random(0, 1) * 2 - 1)
    local randomOffset = math.random(5, 10)
    local teleportPosition = Vector3.new(
        targetCheckpoint.X + (randomOffset * randomDirection),
        targetCheckpoint.Y + 3,
        targetCheckpoint.Z
    )

    print("  -> Teleportasi ke posisi terdekat...")
    humanoidRootPart.CFrame = CFrame.new(teleportPosition)
    wait(0.1)

    print("  -> Bergerak menyentuh checkpoint...")
    moveOntoCheckpoint(targetCheckpoint)
    
    wait(0.5)
end

humanoid:SetStateEnabled(Enum.HumanoidStateType.Dead, true)

print("Semua checkpoint telah berhasil dilalui!")
